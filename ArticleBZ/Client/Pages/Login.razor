@page "/Login"
@using Microsoft.AspNetCore.Components.Authorization
@inject IUserService _userservice
@inject AuthenticationStateProvider _jwtService
@inject IJSRuntime _js;

<div class="main_content sidebar_right pb-50">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-xl-6 col-md-10">
                <div class="login_wrap widget-taber-content shadow p-30 background-white border-radius-5">
                    <div class="padding_eight_all bg-white" dir="rtl">
                        <div class="heading_s1">
                            <h3 class="mb-30 text-center">ورود</h3>
                        </div>
                       
                      
                        <EditForm Model=@loginVm OnValidSubmit=@login >
                              <div class="form-group">
                                <InputText @bind-Value=@loginVm.Email  class="form-control" name="email" placeholder="ایمیل"> </InputText>
                            </div>
                              <div class="form-group">
                                <InputText @bind-Value=@loginVm.Password  class="form-control" name="Password" placeholder="رمز عبور"> </InputText>
                            </div>
                             <div class="form-group">
                                <button type="submit" class="btn btn-fill-out btn-block" name="login">ورود</button>
                            </div>
                            @if (jwtToken != null)
                            {
                                <div> @jwtToken</div>
                            }
                            <div > <ValidationSummary></ValidationSummary></div>
                           
                        </EditForm>
                        <div class="text-muted text-center">ثبت نام نکرده اید ؟ <navlink href="/register">ثبت نام</navlink></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string jwtToken { get; set; }

    [Parameter]
    public LoginVM loginVm { get; set; } = new LoginVM();

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    async void login(){


        var token= await  _userservice.LoginUser(loginVm);

        await _js.SetItem("token", token.token);
        await _js.SetUser("User",loginVm);

        var auth = await authenticationState;
        if (token != null)
        {
      
        }

    }
}
